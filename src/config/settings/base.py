"""
Generated by 'django-admin startproject' using Django 4.1.5.

"""

from pathlib import Path

import environ
from django.urls import reverse_lazy

BASE_DIR = Path(__file__).resolve().parents[3]
SRC_DIR = BASE_DIR / "src"

env = environ.Env(DEBUG=(bool, False))
environ.Env.read_env(BASE_DIR / ".env")

DEBUG = env("DEBUG")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.gis",
    "grappelli.dashboard",
    "grappelli",
    "django.contrib.admin",
    "template_partials",
    "solo.apps.SoloAppConfig",
    "anymail",
    "defender",
    "django_otp",
    "django_otp.plugins.otp_email",
    "django_filters",
    "django_vite",
    "request",  # webstats module
    "simple_menu",
    "rest_framework",
    "rest_framework.authtoken",
    "mozilla_django_oidc",
    "rangefilter",
    "oidc",
    "accounts",
    "common",
    "content",
    "import_export",
    "roadcontrol",
    "sheets",
    "maps",
    "data_exports",
    "registry",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django_otp.middleware.OTPMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "defender.middleware.FailedLoginMiddleware",
    "request.middleware.RequestMiddleware",
    "oidc.middleware.OidcMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [SRC_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "config.context_processors.settings_processor",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


DATABASES = {
    "default": env.db(),
}

DWH_USERNAME = env.str("DWH_USERNAME")
DWH_PASSWORD = env.str("DWH_PASSWORD")
DWH_PORT = env.str("DWH_PORT")
DWH_SSH_HOST = env.str("DWH_SSH_HOST")
DWH_SSH_PORT = env.str("DWH_SSH_PORT")
DWH_SSH_USERNAME = env.str("DWH_SSH_USERNAME")
DWH_SSH_LOCAL_BIND_HOST = env.str("DWH_SSH_LOCAL_BIND_HOST")
DWH_SSH_KEY = env.str("DWH_SSH_KEY", multiline=True)


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "fr-FR"

TIME_ZONE = "Europe/Paris"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
)
STATICFILES_DIR = SRC_DIR / "static"
DJANGO_VITE_ASSETS_PATH = STATICFILES_DIR / "ui_app_ts" / "dist"

STATICFILES_DIRS = [
    str(STATICFILES_DIR),
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

MONAIOT_BACKEND = "oidc.backends.MonAiotOidcBackend"
PROCONNECT_BACKEND = "oidc.backends.ProconnectOidcBackend"

AUTHENTICATION_BACKENDS = ["accounts.backends.RestrictedLoginBackend", MONAIOT_BACKEND, PROCONNECT_BACKEND]

ADMIN_SLUG = env("ADMIN_SLUG")
API_SLUG = env("API_SLUG")

AUTH_USER_MODEL = "accounts.User"

LOGIN_REDIRECT_URL = reverse_lazy("second_factor")

CSV_FILES_DIR = SRC_DIR / "csv"

MEDIA_ROOT = BASE_DIR / "public" / "medias"
MEDIA_URL = "/medias/"

SITE_ID = env.int("SITE_ID", 1)

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
    ],
}

# defender
REDIS_URL = env.str("REDIS_URL", "redis://localhost:6379/0")
DEFENDER_REDIS_URL = REDIS_URL
DEFENDER_LOGIN_FAILURE_LIMIT_USERNAME = 3
DEFENDER_LOGIN_FAILURE_LIMIT_IP = 3
DEFENDER_LOCKOUT_TEMPLATE = "accounts/lockout.html"
DEFENDER_LOCKOUT_COOLOFF_TIME = 5 * 60  # seconds

BASE_URL = env.str("BASE_URL", "http://127.0.0.1:8000")
LOGIN_URL = "login"
LOGOUT_REDIRECT_URL = "login"

PASSWORD_RESET_TIMEOUT = 3600 * 12  # 12 hours


GRAPPELLI_ADMIN_TITLE = "Vigiedéchets"
GRAPPELLI_INDEX_DASHBOARD = "config.dashboard.CustomIndexDashboard"

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
DEFAULT_FROM_EMAIL = "sender@test.fr"
MESSAGE_RECIPIENTS = env.list("MESSAGE_RECIPIENTS", [])

OTP_EMAIL_SUBJECT = "Votre code de sécurité pour l'accès à Vigiedéchets de Trackdéchets"
OTP_EMAIL_BODY_TEMPLATE_PATH = "emails/second_factor/second_factor.txt"
OTP_EMAIL_BODY_HTML_TEMPLATE_PATH = "emails/second_factor/second_factor.html"
OTP_EMAIL_THROTTLE_DELAY = 300  # s

if gdal_path := env.str("GDAL_LIBRARY_PATH", ""):
    GDAL_LIBRARY_PATH = gdal_path
if geos_path := env.str("GEOS_LIBRARY_PATH", ""):
    GEOS_LIBRARY_PATH = env.str("GEOS_LIBRARY_PATH")


# Menu
MENU_SELECT_PARENTS = True


# moz oidc
MONAIOT_OIDC_RP_CLIENT_ID = "trackdechets"
MONAIOT_OIDC_RP_CLIENT_SECRET = env("MONAIOT_OIDC_RP_CLIENT_SECRET")
MONAIOT_OIDC_OP_SERVER_URL = env("MONAIOT_OIDC_OP_SERVER_URL")
MONAIOT_OIDC_OP_AUTHORIZATION_ENDPOINT = f"{MONAIOT_OIDC_OP_SERVER_URL}/auth"
MONAIOT_OIDC_OP_TOKEN_ENDPOINT = f"{MONAIOT_OIDC_OP_SERVER_URL}/token"
MONAIOT_OIDC_OP_USER_ENDPOINT = f"{MONAIOT_OIDC_OP_SERVER_URL}/userinfo"
MONAIOT_OIDC_OP_JWKS_ENDPOINT = f"{MONAIOT_OIDC_OP_SERVER_URL}/certs"
MONAIOT_OIDC_CREATE_USER = True
MONAIOT_OIDC_RP_SIGN_ALGO = "RS256"
MONAIOT_OIDC_AUTHENTICATION_CALLBACK_URL = "monaiot_oidc_authentication_callback"
MONAIOT_OIDC_LOGIN_REDIRECT_URL = "private_home"
MONAIOT_OIDC_LOGIN_REDIRECT_URL_FAILURE = reverse_lazy("mon_aiot_authent_error")

PROCONNECT_OIDC_RP_CLIENT_ID = env("PROCONNECT_OIDC_RP_CLIENT_ID")
PROCONNECT_OIDC_RP_CLIENT_SECRET = env("PROCONNECT_OIDC_RP_CLIENT_SECRET")
PROCONNECT_OIDC_OP_SERVER_URL = env("PROCONNECT_OIDC_OP_SERVER_URL")
PROCONNECT_OIDC_STORE_ACCESS_TOKEN = True
PROCONNECT_OIDC_STORE_ID_TOKEN = True
PROCONNECT_OIDC_OP_AUTHORIZATION_ENDPOINT = f"{PROCONNECT_OIDC_OP_SERVER_URL}/api/v2/authorize"
PROCONNECT_OIDC_OP_TOKEN_ENDPOINT = f"{PROCONNECT_OIDC_OP_SERVER_URL}/api/v2/token"
PROCONNECT_OIDC_OP_USER_ENDPOINT = f"{PROCONNECT_OIDC_OP_SERVER_URL}/api/v2/userinfo"
PROCONNECT_OIDC_OP_JWKS_ENDPOINT = f"{PROCONNECT_OIDC_OP_SERVER_URL}/api/v2/jwks"

DEFAULT_PROCONNECT_OIDC_RP_SCOPES = (
    "openid email given_name usual_name uid siret idp_id organizational_unit belonging_population custom"
)
PROCONNECT_OIDC_RP_SCOPES = env("PROCONNECT_OIDC_RP_SCOPES", default=DEFAULT_PROCONNECT_OIDC_RP_SCOPES)
PROCONNECT_OIDC_CREATE_USER = True
PROCONNECT_OIDC_RP_SIGN_ALGO = "RS256"
PROCONNECT_OIDC_AUTHENTICATION_CALLBACK_URL = "proconnect_oidc_authentication_callback"
PROCONNECT_OIDC_LOGIN_REDIRECT_URL = "private_home"
PROCONNECT_OIDC_LOGIN_REDIRECT_URL_FAILURE = reverse_lazy("proconnect_authent_error")
PROCONNECT_OIDC_OP_LOGOUT_URL_METHOD = "accounts.views.proconnect_logout"
OIDC_OP_LOGOUT_URL_METHOD = "accounts.views.proconnect_logout"
OIDC_RP_LOGOUT_ENDPOINT = f"{PROCONNECT_OIDC_OP_SERVER_URL}/api/v2/session/end"

ID_ID_CURRASSO = env("ID_ID_CURRASSO")
PROCONNECT_ALLOWED_IDP_IDS = [
    ID_ID_CURRASSO,
]


OIDC_LOGIN_REDIRECT_URL = "private_home"

# user
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

CSRF_TRUSTED_ORIGINS = env.list("CSRF_TRUSTED_ORIGINS", default=[])


# API
TD_API_URL = env("TD_API_URL")
TD_API_TOKEN = env("TD_API_TOKEN")

# WEBHOOKS

TD_WEBHOOK_URL = env("TD_WEBHOOK_URL")
TD_WEBHOOK_TOKEN = env("TD_WEBHOOK_TOKEN")

# Web  stats:  path to ignore
REQUEST_IGNORE_PATHS = (
    rf"^{ADMIN_SLUG}/",
    r"/sheets/compute-fragment/",
    r"/static/",
    r"favicon.ico",
)

# Storages

AWS_S3_ENDPOINT_URL = env("AWS_S3_ENDPOINT_URL")
AWS_BUCKET_NAME = env("AWS_BUCKET_NAME")
AWS_ACCESS_KEY_ID = env("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = env("AWS_SECRET_ACCESS_KEY")
AWS_S3_REGION_NAME = env("AWS_S3_REGION_NAME")
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "private_s3": {
        "BACKEND": "roadcontrol.storage_backends.PrivateMediaStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}

SKIP_ROAD_CONTROL_SIRET_CHECK = False

GUN_DATA_UPDATE_DATE_STRING = env("GUN_DATA_UPDATE_DATE_STRING")
GISTRID_DATA_UPDATE_DATE_STRING = env("GISTRID_DATA_UPDATE_DATE_STRING")
RNDTS_DATA_UPDATE_DATE_STRING = env("RNDTS_DATA_UPDATE_DATE_STRING")
