name: TD Inspection CI

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: inspection_test
        ports: [ '5432:5432' ]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set locales
        run: sudo apt-get install -y tzdata locales && sudo locale-gen fr_FR && sudo dpkg-reconfigure --frontend=noninteractive locales


      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install python dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Ruff Linting
        run: pipenv run ruff check .

      - name: Ruff Formatting
        run: pipenv run ruff format --check .

      - name: Bandit security checks
        run: pipenv run bandit --exit-zero -c pyproject.toml  -r src

      - name: Run Tests
        working-directory: src
        run: |
          pipenv run pytest
        env:
          DJANGO_SETTINGS_MODULE: config.settings.test
          DATABASE_URL: postgresql://admin:postgres@localhost/inspection_test
          WAREHOUSE_URL: postgresql://admin:postgres@localhost/tdwarehouse_test
          DEFENDER_REDIS_URL: redis://localhost:6379/0
          ADMIN_SLUG: admin
          API_SLUG: apisecret
          TD_WEBHOOK_URL: http://api.track.test/webhook
          TD_WEBHOOK_TOKEN: xyz123
          MESSAGE_RECIPIENTS: lorem@ipsum.lol
          MONAIOT_SERVER_URL: https://test.fr
          MONAIOT_REALM: realm
          MONAIOT_CLIENT_ID: td
          MONAIOT_SECRET: xyz
          CSRF_TRUSTED_ORIGINS: "https://url.test"
          TD_API_URL: http://api.test
          TD_API_TOKEN: xyz"
          AWS_BUCKET_NAME: plop
          AWS_S3_REGION_NAME: fr-par
          AWS_S3_ENDPOINT_URL: "https://s3.fr-par.scw.cloud"
          AWS_ACCESS_KEY_ID: "XYZ"
          AWS_SECRET_ACCESS_KEY: "xyz2"
